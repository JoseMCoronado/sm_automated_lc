<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <record model="ir.actions.server" id="action_calculate_landed_cost">
    <field name="crud_model_id" eval="False"/>
    <field name="help" eval="False"/>
    <field name="link_field_id" eval="False"/>
    <field name="model_id" ref="stock.model_stock_picking"/>
    <field name="name">[JOS] Calculate Landed Cost from Stock Picking</field>
    <field name="sequence">5</field>
    <field name="state">code</field>
    <field name="child_ids" eval="[(6, 0, [])]"/>
    <field name="code"><![CDATA[
if record.purchase_id and record.purchase_id.x_landed_cost_lines and record.x_landed_cost_calculated != True:
    lines = record.purchase_id.x_landed_cost_lines
    landed_cost = record.env['stock.landed.cost'].create({'name': record.name, 'account_journal_id':3, 'picking_ids':[(6,0,[record.id])]})
    for l in lines:
        vals = {
                'product_id': l.x_product_id.id,
                'name': l.x_name,
                'account_id': l.x_account_id.id,
                'split_method': l.x_split_method,
                'price_unit': l.x_price_unit,
                'cost_id': landed_cost.id,
                }
        record.env['stock.landed.cost.lines'].create(vals)
    landed_cost.compute_landed_cost()
    landed_cost.button_validate()
    record['x_landed_cost_calculated'] = True
else:
    raise Warning('You have already created a Landed Cost for this transfer, no associated PO for the transfer and/or landed cost lines in the Purchase Order.')
      ]]>
    </field>
  </record>
</odoo>
